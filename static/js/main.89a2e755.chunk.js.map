{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpenseList","items","length","map","expense","id","ExpensesFilter","vaule","selected","onChange","event","onChangeFilter","target","value","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpenseChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setfilteredYear","filteredExpenses","filter","item","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.89a2e755.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nimport \"./ExpensesList.css\";\r\nconst ExpenseList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropDownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select vaule={props.selected} onChange={dropDownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n          <option value=\"2018\">2018</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpenseChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpenseChart;\r\n","import React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport ExpenseList from \"./ExpensesList\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setfilteredYear] = useState(\"2020\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setfilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = props.items.filter((item) => {\r\n    return item.date.getFullYear().toString() === filteredYear; //return T or F\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpenseChart expenses={filteredExpenses} />\r\n        {/* {filteredExpenses.length === 0 && <p1>No expenses found</p1>}\r\n        {filteredExpenses.length > 0 &&\r\n          filteredExpenses.map((expense) => (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          ))} */}\r\n\r\n        {/* {filteredExpenses.length === 0 ? (\r\n          <p1>no expenses found</p1>\r\n        ) : (\r\n          filteredExpenses.map((expense) => (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          ))\r\n        )} */}\r\n        <ExpenseList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: \"\",\r\n  //   enteredAmount: \"\",\r\n  //   enteredDate: \"\",\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  // const titleChangeHandler = (event) => {\r\n  //   setUserInput({ ...userInput, enteredTitle: event.target.value });\r\n  // };//not a better practice\r\n\r\n  // const titleChangeHandler = (event) => {\r\n  //   setUserInput((prevState) => {\r\n  //     return { ...prevState, enteredTitle: event.target.value };\r\n  //   });\r\n  // };\r\n\r\n  // const amountChangeHandler = (event) => {\r\n  //   setUserInput((prevState) => {\r\n  //     return { ...userInput, enteredAmount: event.target.value };\r\n  //   });\r\n  // };\r\n\r\n  // const dateChangeHandler = (event) => {\r\n  //   setUserInput((prevState) => {\r\n  //     return { ...prevState, enteredDate: event.target.value };\r\n  //   });\r\n  // };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    //console.log(\"expensedata\", expenseData);\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n    setEnteredTitle(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"Date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button type=\"button\" onClick={props.onCancel}>\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\">Add expense</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random.toString(),\r\n    };\r\n    //console.log(expenseData);\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense.js\";\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"car insurance\",\n    amount: 289.8,\n    date: new Date(2019, 2, 21),\n  },\n  {\n    id: \"e2\",\n    title: \"shopping\",\n    amount: 230,\n    date: new Date(2022, 2, 22),\n  },\n  {\n    id: \"e3\",\n    title: \"washing\",\n    amount: 289,\n    date: new Date(2020, 2, 21),\n  },\n  {\n    id: \"e4\",\n    title: \"bathing\",\n    amount: 289,\n    date: new Date(2021, 2, 21),\n  },\n  {\n    id: \"e5\",\n    title: \"bathing\",\n    amount: 289,\n    date: new Date(2021, 2, 19),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}